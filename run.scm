(define buffer '())
(define (push a) (set! buffer (append (list a) buffer)))
(define (pop) (let ((a (car buffer))) (begin (set! buffer (cdr buffer)) a)))
(define (number-sequence a) (if (< a 1) (list a) (append (list a) (number-sequence (- a 1)))))
(define (add) (push (+ (pop) (pop))))
(define (fib-buffer) (begin (push (cadr buffer)) (push (+ (pop) (car buffer)))))
(push 0)
(push 1)
(let loop ((i 0)) (begin (fib-buffer) (if (= i 10) #t (loop (+ i 1)))))
(display buffer)
